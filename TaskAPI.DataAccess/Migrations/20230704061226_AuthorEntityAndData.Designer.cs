// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskAPI.DataAccess;

#nullable disable

namespace TaskAPI.DataAccess.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20230704061226_AuthorEntityAndData")]
    partial class AuthorEntityAndData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication2.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Sankha"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Yapa"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Priyamantha"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Bandara"
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreatedDate = new DateTime(2023, 7, 4, 11, 42, 26, 294, DateTimeKind.Local).AddTicks(4376),
                            Description = "Get some text books for school",
                            Status = 0,
                            Title = "Get books for school form DB",
                            UpdatedDate = new DateTime(2023, 7, 9, 11, 42, 26, 294, DateTimeKind.Local).AddTicks(4394)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CreatedDate = new DateTime(2023, 7, 4, 11, 42, 26, 294, DateTimeKind.Local).AddTicks(4426),
                            Description = "Get some text books for school",
                            Status = 0,
                            Title = "Get books for school form DB",
                            UpdatedDate = new DateTime(2023, 7, 9, 11, 42, 26, 294, DateTimeKind.Local).AddTicks(4428)
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CreatedDate = new DateTime(2023, 7, 4, 11, 42, 26, 294, DateTimeKind.Local).AddTicks(4430),
                            Description = "Get some text books for school",
                            Status = 0,
                            Title = "Get books for school form DB",
                            UpdatedDate = new DateTime(2023, 7, 9, 11, 42, 26, 294, DateTimeKind.Local).AddTicks(4431)
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            CreatedDate = new DateTime(2023, 7, 4, 11, 42, 26, 294, DateTimeKind.Local).AddTicks(4432),
                            Description = "Get some text books for school",
                            Status = 0,
                            Title = "Get books for school form DB",
                            UpdatedDate = new DateTime(2023, 7, 9, 11, 42, 26, 294, DateTimeKind.Local).AddTicks(4433)
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Todo", b =>
                {
                    b.HasOne("WebApplication2.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
